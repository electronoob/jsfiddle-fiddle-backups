<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <title></title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="robots" content="noindex, nofollow">
  <meta name="googlebot" content="noindex, nofollow">
  <meta name="viewport" content="width=device-width, initial-scale=1">


  <script
    type="text/javascript"
    src="/js/lib/dummy.js"
    
  ></script>

    <link rel="stylesheet" type="text/css" href="/css/result-light.css">


  <style id="compiled-css" type="text/css">
      canvas {
  border: 1px solid #fff;
  width: 600px;
  height: 300px;
    image-rendering: optimizeSpeed;
    image-rendering: -moz-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: optimize-contrast;
    image-rendering: pixelated;
    -ms-interpolation-mode: nearest-neighbor;
    background-color: #000;
    border: 1px solid #000;
}
  </style>


  <!-- TODO: Missing CoffeeScript 2 -->

  <script type="text/javascript">//<![CDATA[

    window.onload=function(){
      
//fire
cv = document.getElementById("splash");
var ct = cv.getContext("2d");

var imgData=ct.getImageData(0,0,200,100);
seedfire();

/* setting this interval allows you to adjust performance */
setInterval(updatebuffer, 1);

var iterations = 0;
function updatebuffer() {
	seedfire();
	if (iterations == 2) {
		animatefire();
	}
	if (iterations == 4) {
		flip();
	}
	if (iterations == 4) {
		iterations = 0;
	} else {
		iterations++;
	}
}

function flip() {
	ct.putImageData(imgData,0,2);
}

function seedfire() {
  for (i=0; i<10; i++) {
		x = Math.round(Math.random() * (200 - 0) + 0,1);
		r = Math.round(Math.random() * (255 - 200) + 200,1);
		g = Math.round(Math.random() * (255 - 0) + 0,1);
		b = Math.round(Math.random() * (255 - 0) + 0,1);
		a = Math.round(Math.random() * (240 - 100) + 100,1);
	        setPixelOnCanvas(x,100,r,g,b,a);
  }
}
function animatefire() {
  for (y=99; y>50; y--) {
    for (x=0; x<200; x++)  {      
      rgbaleft  = getPixelFromCanvas(x-1, y);
      rgbaright = getPixelFromCanvas(x+1, y);
      rgbadown  = getPixelFromCanvas(x, y+1);
      
      averagered   =  rgbaleft[0] + rgbaright[0] + rgbadown[0];
      averagegreen = rgbaleft[1] + rgbaright[1] + rgbadown[1];
      averageblue  = rgbaleft[2] + rgbaright[2] + rgbadown[2];
      averagealpha  = rgbaleft[3] + rgbaright[3] + rgbadown[3];
	
	averagered = Math.round(averagered / 3, 1);
	averagegreen = Math.round(averagegreen / 3, 1);
	averageblue = Math.round(averageblue / 3, 1);
	averagealpha = Math.round(averagealpha / 3, 1);
	averagealpha -= 1;
        setPixelOnCanvas(x,y,averagered,averagegreen,averageblue,averagealpha);

    }
  }

}
function setPixelOnCanvas(x,y,r,g,b,a) {
          offset = (y - 1) * 200 * 4 + (x * 4);
          imgData.data[offset] = r;
          imgData.data[offset + 1] = g;
          imgData.data[offset + 2] = b;
          imgData.data[offset + 3] = a;  
}
function getPixelFromCanvas(x, y){
        offset = (y - 1) * 200 * 4 + (x * 4);
 	chunk = new Array();
	chunk[0] = imgData.data[offset];
	chunk[1] = imgData.data[offset + 1];
	chunk[2] = imgData.data[offset + 2];
	chunk[3] = imgData.data[offset + 3];
	return chunk;
}




    }

  //]]></script>

</head>
<body>
    <canvas id="splash" width="200" height="100"></canvas>

  
  <script>
    // tell the embed parent frame the height of the content
    if (window.parent && window.parent.parent){
      window.parent.parent.postMessage(["resultsFrame", {
        height: document.body.getBoundingClientRect().height,
        slug: "jv4ccjdx"
      }], "*")
    }

    // always overwrite window.name, in case users try to set it manually
    window.name = "result"
  </script>
</body>
</html>
